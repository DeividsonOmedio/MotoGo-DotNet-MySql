// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using motogoAPI;

#nullable disable

namespace motogoAPI.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20230614003507_tableentregadores")]
    partial class tableentregadores
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8mb4_0900_ai_ci")
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "utf8mb4");

            modelBuilder.Entity("motogoAPI.Entities.EnderecosEntregas", b =>
                {
                    b.Property<int>("IdEnderecosEntrega")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<string>("Uf")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("IdEnderecosEntrega");

                    b.ToTable("EnderecoEntrega");
                });

            modelBuilder.Entity("motogoAPI.Entities.EnderecosRetiradas", b =>
                {
                    b.Property<int>("IdEnderecoRetiradas")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<string>("Uf")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("IdEnderecoRetiradas");

                    b.ToTable("EnderecoRetirada");
                });

            modelBuilder.Entity("motogoAPI.Entities.EndereçoEntregadores", b =>
                {
                    b.Property<int>("IdEnderecoEntregadores")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("IdEntregador")
                        .HasColumnType("int");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<string>("Uf")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("IdEnderecoEntregadores");

                    b.ToTable("EndereçoEntregador");
                });

            modelBuilder.Entity("motogoAPI.Entities.Entregadores", b =>
                {
                    b.Property<int>("IdEntregador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<double>("AvaliacaoMedia")
                        .HasColumnType("double");

                    b.Property<int>("AvatarIdImagemEntregador")
                        .HasColumnType("int");

                    b.Property<int>("Cpf")
                        .HasColumnType("int");

                    b.Property<bool>("Disponibilidade")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Telefone")
                        .HasColumnType("int");

                    b.HasKey("IdEntregador");

                    b.HasIndex("AvatarIdImagemEntregador");

                    b.ToTable("Entregador");
                });

            modelBuilder.Entity("motogoAPI.Entities.ImagemCnh", b =>
                {
                    b.Property<int>("IdImagemCnh")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("IdEntregador")
                        .HasColumnType("int");

                    b.Property<byte[]>("Imagem")
                        .IsRequired()
                        .HasColumnType("longblob");

                    b.HasKey("IdImagemCnh");

                    b.ToTable("imagemCnh");
                });

            modelBuilder.Entity("motogoAPI.Entities.ImagemDocumentoVeiculo", b =>
                {
                    b.Property<int>("IdImagemDocumentoVeiculo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("IdEntregador")
                        .HasColumnType("int");

                    b.Property<int>("IdVeiculos")
                        .HasColumnType("int");

                    b.Property<byte[]>("Imagem")
                        .IsRequired()
                        .HasColumnType("longblob");

                    b.HasKey("IdImagemDocumentoVeiculo");

                    b.ToTable("ImagemDocumentoVeiculos");
                });

            modelBuilder.Entity("motogoAPI.Entities.ImagemEntregador", b =>
                {
                    b.Property<int>("IdImagemEntregador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("IdEntregador")
                        .HasColumnType("int");

                    b.Property<byte[]>("Imagem")
                        .IsRequired()
                        .HasColumnType("longblob");

                    b.HasKey("IdImagemEntregador");

                    b.ToTable("ImagemEntregador");
                });

            modelBuilder.Entity("motogoAPI.Entities.Pedidos", b =>
                {
                    b.Property<int>("IdPedido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("DataHoraPedido")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("IdEnderecoEntregas")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("IdEnderecoRetiradas")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("IdEntregador")
                        .HasColumnType("int");

                    b.Property<int>("IdProdutos")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.HasKey("IdPedido");

                    b.ToTable("Pedido");
                });

            modelBuilder.Entity("motogoAPI.Entities.Produtos", b =>
                {
                    b.Property<int>("IdProdutos")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<double>("Altura")
                        .HasColumnType("double");

                    b.Property<double>("Comprimento")
                        .HasColumnType("double");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("Largura")
                        .HasColumnType("double");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("Peso")
                        .HasColumnType("double");

                    b.Property<double>("Valor")
                        .HasColumnType("double");

                    b.HasKey("IdProdutos");

                    b.ToTable("Produto");
                });

            modelBuilder.Entity("motogoAPI.Entities.Usuarios", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("MeioDePagamentoPadrao")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Telefone")
                        .HasColumnType("int");

                    b.HasKey("IdUsuario");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("motogoAPI.Entities.Veiculos", b =>
                {
                    b.Property<int>("IdVeiculos")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("AnoFabricacao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Cor")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("IdEntregador")
                        .HasColumnType("int");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("IdVeiculos");

                    b.ToTable("Veiculo");
                });

            modelBuilder.Entity("motogoAPI.Entities.Entregadores", b =>
                {
                    b.HasOne("motogoAPI.Entities.ImagemEntregador", "Avatar")
                        .WithMany()
                        .HasForeignKey("AvatarIdImagemEntregador")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Avatar");
                });
#pragma warning restore 612, 618
        }
    }
}
